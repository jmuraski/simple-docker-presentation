global
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice
  maxconn 2000
  user haproxy
  group haproxy
  daemon

defaults
  log global
  mode http
  option httplog
  option dontlognull
  retries 3
  timeout connect 5000
  timeout client 10000
  timeout server 10000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
  bind *:80
  stats enable
  stats uri /haproxy?stats
  stats realm Strictly\ Private
  stats auth jmuraski:jmuraski
  monitor-uri /index.html
  {{range lsdir "/services"}}acl is_{{.}} path_beg -i /{{.}}
  {{end}}

  {{range lsdir "/services"}}use_backend {{.}} if is_{{.}}
  {{end}}

{{range $dir := lsdir "/services"}}
backend {{$dir}}
  option httpclose
  option forwardfor
  {{$custdir := printf "/services/%s/*" $dir}}{{range  $count, $key := gets $custdir}}{{$data :=json .Value}}{{if eq $count 0}}balance {{$data.loadBalance}}{{end}}
  {{if and (ne $data.healthCheck "false") (eq $count 0)}}option httpchk {{$data.healthCheck}}{{end}}
  {{if and (ne $data.rewriteUrl "false") (eq $count 0)}}reqrep ^([^\ :]*)\ /){{$data.rewriteUrl}}?(.*)     \1\ /\2{{end}}{{end}}
  {{$custdir := printf "/services/%s/*" $dir}}{{range  $count, $key := gets $custdir}}{{$data :=json .Value}}server {{base .Key}} {{$data.ip}}:{{$data.port}} {{if $data.extraArgs}}{{$data.extraArgs}}{{end}}
  {{end}}{{end}}
